name: Publish Python Package

on:
  push:
    branches: [main, release/*]
    tags: ["v*"]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pycalf
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Set test version for TestPyPI
        id: set_test_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}.dev${GITHUB_RUN_NUMBER}
            echo "Using test version from tag: ${VERSION}"
          else
            VERSION="0.0.1.dev${GITHUB_RUN_NUMBER}"
            echo "Using development version: ${VERSION}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          sed -i "s/^version\s*=.*/version = \"${VERSION}\"/" pyproject.toml

      - name: Build package for TestPyPI
        run: uv build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

      - name: Set production version for PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Using production version: ${VERSION}"
          sed -i "s/^version\s*=.*/version = \"${VERSION}\"/" pyproject.toml

      - name: Build package for PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          rm -rf dist/
          uv build

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: false
          verbose: true
